!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).Brokers={})}(this,(function(t){"use strict";const e=[{label:"Symbol",formatter:"symbol",id:"symbol",dataFields:["symbol","symbol"]},{label:"Side",id:"side",dataFields:["side"],formatter:"side"},{label:"Type",id:"type",dataFields:["type","parentId","stopType"],formatter:"type"},{label:"Qty",alignment:"right",id:"qty",dataFields:["qty"],help:"Size in lots"},{label:"Limit Price",alignment:"right",id:"limitPrice",dataFields:["limitPrice"],formatter:"formatPrice"},{label:"Stop Price",alignment:"right",id:"stopPrice",dataFields:["stopPrice"],formatter:"formatPrice"},{label:"Last",alignment:"right",id:"last",dataFields:["last"],formatter:"formatPriceForexSup",highlightDiff:!0},{label:"Execution",id:"execution",dataFields:["execution"]},{label:"Status",id:"status",dataFields:["status"],formatter:"status",supportedStatusFilters:[0]},{label:"Order id",id:"id",dataFields:["id"]}],i=[{label:"Symbol",formatter:"symbol",id:"symbol",dataFields:["symbol","symbol"]},{label:"Side",id:"side",dataFields:["side"],formatter:"side"},{label:"Qty",alignment:"right",id:"qty",dataFields:["qty"],help:"Size in lots"},{label:"Avg Fill Price",alignment:"right",id:"avgPrice",dataFields:["avgPrice"],formatter:"formatPrice"},{label:"Last",alignment:"right",id:"last",dataFields:["last"],formatter:"formatPriceForexSup",highlightDiff:!0},{label:"Profit",alignment:"right",id:"pl",dataFields:["pl"],formatter:"profit"}],s=[{label:"Title",notSortable:!0,id:"title",dataFields:["title"],formatter:"custom_uppercase"},{label:"Balance",alignment:"right",id:"balance",dataFields:["balance"],formatter:"fixed"},{label:"Open PL",alignment:"right",id:"pl",dataFields:["pl"],formatter:"profit",notSortable:!0},{label:"Equity",alignment:"right",id:"equity",dataFields:["equity"],formatter:"fixed",notSortable:!0}];function o(t){return`SampleBroker-${t}`}t.BrokerSample=class{constructor(t,e){this._accountManagerData={title:"Trading Sample",balance:1e7,equity:1e7,pl:0},this._positionById={},this._positions=[],this._orderById={},this._orders=[],this._executions=[],this._idsCounter=1,this._quotesProvider=e,this._host=t,this._host.setButtonDropdownActions(this._buttonDropdownItems());const i=this._host.sellBuyButtonsVisibility();null!==i&&i.subscribe((()=>{this._host.setButtonDropdownActions(this._buttonDropdownItems())}));const s=this._host.domPanelVisibility();s&&s.subscribe((()=>{this._host.setButtonDropdownActions(this._buttonDropdownItems())}));const o=this._host.orderPanelVisibility();o&&o.subscribe((()=>{this._host.setButtonDropdownActions(this._buttonDropdownItems())})),this._amChangeDelegate=this._host.factory.createDelegate(),this._balanceValue=this._host.factory.createWatchedValue(this._accountManagerData.balance),this._equityValue=this._host.factory.createWatchedValue(this._accountManagerData.equity),this._amChangeDelegate.subscribe(null,(t=>{this._balanceValue.setValue(t.balance),this._equityValue.setValue(t.equity)}))}connectionStatus(){return 1}chartContextMenuActions(t,e){return this._host.defaultContextMenuActions(t)}isTradable(t){return Promise.resolve(!0)}async placeOrder(t){return await(e=>{t.duration&&console.log("Duration are not implemented in this sample."),this._host.activateBottomWidget();const i={id:""+this._idsCounter++,duration:e.duration,limitPrice:e.limitPrice,profit:0,qty:e.qty,side:e.side||1,status:6,stopPrice:e.stopPrice,symbol:e.symbol,type:e.type||2,execution:e.customFields?e.customFields[2410]:"",takeProfit:e.takeProfit,stopLoss:e.stopLoss};return this._updateOrder(i),Promise.resolve()})(t),{}}modifyOrder(t){return(t=>{const e=this._orderById[t.id];if(e){const i={...e};i.qty=t.qty,i.stopPrice=t.stopPrice,i.limitPrice=t.limitPrice,i.execution=t.customFields?t.customFields[2410]:"",this._updateOrder(i)}return Promise.resolve()})(t)}editPositionBrackets(t,e){return((t,e)=>{const i=this._positionById[t];if(i){const t={...i};t.takeProfit=e.takeProfit||i.takeProfit||null,t.stopLoss=e.stopLoss||i.stopLoss||null,this._updatePosition(t)}return Promise.resolve()})(t,e)}async closePosition(t){const e=this._positionById[t];await(()=>{this.placeOrder({symbol:e.symbol,side:-1===e.side?1:-1,type:2,qty:e.qty})})()}orders(){return Promise.resolve(this._orders.slice())}positions(){return Promise.resolve(this._positions.slice())}executions(t){return Promise.resolve(this._executions.filter((e=>e.symbol===t)))}async reversePosition(t){const e=this._positionById[t];await(()=>this.placeOrder({symbol:e.symbol,side:-1===e.side?1:-1,type:2,qty:2*e.qty}))()}cancelOrder(t){const e=this._orderById[t];return(()=>(e.status=1,this._updateOrder(e),Promise.resolve()))()}cancelOrders(t,e,i){return(()=>Promise.all(i.map((t=>this.cancelOrder(t)))).then((()=>{})))()}accountManagerInfo(){return{accountTitle:"Trading Sample",summary:[{text:"Balance",wValue:this._balanceValue,formatter:"fixed",isDefault:!0},{text:"Equity",wValue:this._equityValue,formatter:"fixed",isDefault:!0}],orderColumns:e,positionColumns:i,pages:[{id:"accountsummary",title:"Account Summary",tables:[{id:"accountsummary",columns:s,getData:()=>Promise.resolve([this._accountManagerData]),initialSorting:{property:"balance",asc:!1},changeDelegate:this._amChangeDelegate}]}],contextMenuActions:(t,e)=>Promise.resolve(this._bottomContextMenuItems(e))}}async symbolInfo(t){const e=await this._host.getSymbolMinTick(t);return{qty:{min:1,max:1e12,step:1},pipValue:1*e*1||1,pipSize:e,minTick:e,description:""}}currentAccount(){return"1"}async accountsMetainfo(){return[{id:"1",name:"Test account"}]}_bottomContextMenuItems(t){const e={separator:!0},i=this._host.sellBuyButtonsVisibility();return t.length&&t.push(e),t.concat([{text:"Show Buy/Sell Buttons",action:()=>{i&&i.setValue(!i.value())},checkable:!0,checked:null!==i&&i.value()},{text:"Trading Settings...",action:()=>{this._host.showTradingProperties()}}])}_buttonDropdownItems(){return this._host.defaultDropdownMenuActions().concat([{text:"Trading Settings...",action:()=>{this._host.showTradingProperties()}}])}_createPositionForOrder(t){const e=t.symbol;let i=this._positionById[e];const s=t.side,o=t.qty;if(t.avgPrice=t.price,i){const e=t.side===i.side?1:-1;if(e>0)i.avgPrice=(i.qty*i.avgPrice+t.qty*t.price)/(i.qty+t.qty);else{i.avgPrice=i.avgPrice;const e=Math.min(o,i.qty);this._accountManagerData.balance+=(t.price-i.avgPrice)*e*(-1===i.side?-1:1)}i.qty=i.qty+t.qty*e,i.qty<0&&(i.side=-1===i.side?1:-1,i.qty*=-1)}else i={...t,id:e,avgPrice:t.price};const a={id:""+this._idsCounter++,brokerSymbol:t.brokerSymbol,price:t.price,qty:o,side:s,symbol:t.symbol,time:Date.now()};this._executions.push(a),this._host.executionUpdate(a),this._updatePosition(i),this._recalculateAMData()}_updateOrderLast(t){this._host.orderPartialUpdate(t.id,{last:t.last})}_updateOrder(t){const e={[-1]:{2:()=>!!t.price,1:()=>void 0!==t.limitPrice&&t.last>=t.limitPrice,3:()=>void 0!==t.stopPrice&&t.last<=t.stopPrice,4:()=>!1},1:{2:()=>!!t.price,1:()=>void 0!==t.limitPrice&&t.last<=t.limitPrice,3:()=>void 0!==t.stopPrice&&t.last>=t.stopPrice,4:()=>!1}},i=Boolean(this._orderById[t.id]);this._orderById[t.id]=t,i||(this._orders.push(t),this._subscribeData(t.symbol,t.id,(i=>{if(t.last!==i){if(t.last=i,null==t.price&&(t.price=t.last),6===t.status&&e[t.side][t.type]()){const e={...t};delete e.status,t.price=t.last,t.avgPrice=t.last,this._createPositionForOrder(e),t.status=2,this._updateOrder(t)}this._updateOrderLast(t)}}))),this._host.orderUpdate(t)}_updatePosition(t){const e=Boolean(this._positionById[t.id]);if(e&&!t.qty){this._unsubscribeData(t.id);const e=this._positions.indexOf(t);return-1!==e&&this._positions.splice(e,1),delete this._positionById[t.id],void this._host.positionUpdate(t)}e||(this._positions.push(t),this._subscribeData(t.symbol,t.id,(e=>{t.last!==e&&(t.last=e,t.profit=(t.last-t.price)*t.qty*(-1===t.side?-1:1),this._host.plUpdate(t.symbol,t.profit),this._host.positionPartialUpdate(t.id,t),this._recalculateAMData())}))),this._positionById[t.id]=t,this._host.positionUpdate(t)}_subscribeData(t,e,i){this._quotesProvider.subscribeQuotes([],[t],(t=>{const e=t[0];"ok"===e.s&&"number"==typeof e.v.lp&&i(e.v.lp)}),o(e))}_unsubscribeData(t){this._quotesProvider.unsubscribeQuotes(o(t))}_recalculateAMData(){let t=0;this._positions.forEach((e=>{t+=e.profit||0})),this._accountManagerData.pl=t,this._accountManagerData.equity=this._accountManagerData.balance+t,this._amChangeDelegate.fire(this._accountManagerData)}},Object.defineProperty(t,"__esModule",{value:!0})}));
